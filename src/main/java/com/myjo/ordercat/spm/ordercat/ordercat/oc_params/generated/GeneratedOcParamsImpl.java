package com.myjo.ordercat.spm.ordercat.ordercat.oc_params.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_params.OcParams;
import com.speedment.common.annotation.GeneratedCode;
import java.time.LocalDateTime;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_params.OcParams}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOcParamsImpl implements OcParams {
    
    private long id;
    private String pkey;
    private String pvalue;
    private LocalDateTime addTime;
    
    protected GeneratedOcParamsImpl() {
        
    }
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public String getPkey() {
        return pkey;
    }
    
    @Override
    public String getPvalue() {
        return pvalue;
    }
    
    @Override
    public LocalDateTime getAddTime() {
        return addTime;
    }
    
    @Override
    public OcParams setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public OcParams setPkey(String pkey) {
        this.pkey = pkey;
        return this;
    }
    
    @Override
    public OcParams setPvalue(String pvalue) {
        this.pvalue = pvalue;
        return this;
    }
    
    @Override
    public OcParams setAddTime(LocalDateTime addTime) {
        this.addTime = addTime;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "      + Objects.toString(getId()));
        sj.add("pkey = "    + Objects.toString(getPkey()));
        sj.add("pvalue = "  + Objects.toString(getPvalue()));
        sj.add("addTime = " + Objects.toString(getAddTime()));
        return "OcParamsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof OcParams)) { return false; }
        final OcParams thatOcParams = (OcParams)that;
        if (this.getId() != thatOcParams.getId()) {return false; }
        if (!Objects.equals(this.getPkey(), thatOcParams.getPkey())) {return false; }
        if (!Objects.equals(this.getPvalue(), thatOcParams.getPvalue())) {return false; }
        if (!Objects.equals(this.getAddTime(), thatOcParams.getAddTime())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getPkey());
        hash = 31 * hash + Objects.hashCode(getPvalue());
        hash = 31 * hash + Objects.hashCode(getAddTime());
        return hash;
    }
}