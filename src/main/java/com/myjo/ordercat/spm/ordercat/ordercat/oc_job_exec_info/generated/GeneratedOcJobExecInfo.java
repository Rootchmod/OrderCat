package com.myjo.ordercat.spm.ordercat.ordercat.oc_job_exec_info.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_job_exec_info.OcJobExecInfo;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.time.TimestampToLocalDateTimeMapper;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Optional;

/**
 * The generated base for the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_job_exec_info.OcJobExecInfo}-interface
 * representing entities of the {@code oc_job_exec_info}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedOcJobExecInfo {
    
    /**
     * This Field corresponds to the {@link OcJobExecInfo} field that can be
     * obtained using the {@link OcJobExecInfo#getId()} method.
     */
    final LongField<OcJobExecInfo, Long> ID = LongField.create(
        Identifier.ID,
        OcJobExecInfo::getId,
        OcJobExecInfo::setId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link OcJobExecInfo} field that can be
     * obtained using the {@link OcJobExecInfo#getJobName()} method.
     */
    final StringField<OcJobExecInfo, String> JOB_NAME = StringField.create(
        Identifier.JOB_NAME,
        o -> OptionalUtil.unwrap(o.getJobName()),
        OcJobExecInfo::setJobName,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcJobExecInfo} field that can be
     * obtained using the {@link OcJobExecInfo#getBeginTime()} method.
     */
    final ComparableField<OcJobExecInfo, Timestamp, LocalDateTime> BEGIN_TIME = ComparableField.create(
        Identifier.BEGIN_TIME,
        OcJobExecInfo::getBeginTime,
        OcJobExecInfo::setBeginTime,
        new TimestampToLocalDateTimeMapper(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcJobExecInfo} field that can be
     * obtained using the {@link OcJobExecInfo#getEndTime()} method.
     */
    final ComparableField<OcJobExecInfo, Timestamp, LocalDateTime> END_TIME = ComparableField.create(
        Identifier.END_TIME,
        o -> OptionalUtil.unwrap(o.getEndTime()),
        OcJobExecInfo::setEndTime,
        new TimestampToLocalDateTimeMapper(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcJobExecInfo} field that can be
     * obtained using the {@link OcJobExecInfo#getElapsed()} method.
     */
    final StringField<OcJobExecInfo, String> ELAPSED = StringField.create(
        Identifier.ELAPSED,
        o -> OptionalUtil.unwrap(o.getElapsed()),
        OcJobExecInfo::setElapsed,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcJobExecInfo} field that can be
     * obtained using the {@link OcJobExecInfo#getStatus()} method.
     */
    final StringField<OcJobExecInfo, String> STATUS = StringField.create(
        Identifier.STATUS,
        OcJobExecInfo::getStatus,
        OcJobExecInfo::setStatus,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the id of this OcJobExecInfo. The id field corresponds to the
     * database column ordercat.ordercat.oc_job_exec_info.id.
     * 
     * @return the id of this OcJobExecInfo
     */
    long getId();
    
    /**
     * Returns the jobName of this OcJobExecInfo. The jobName field corresponds
     * to the database column ordercat.ordercat.oc_job_exec_info.job_name.
     * 
     * @return the jobName of this OcJobExecInfo
     */
    Optional<String> getJobName();
    
    /**
     * Returns the beginTime of this OcJobExecInfo. The beginTime field
     * corresponds to the database column
     * ordercat.ordercat.oc_job_exec_info.begin_time.
     * 
     * @return the beginTime of this OcJobExecInfo
     */
    LocalDateTime getBeginTime();
    
    /**
     * Returns the endTime of this OcJobExecInfo. The endTime field corresponds
     * to the database column ordercat.ordercat.oc_job_exec_info.end_time.
     * 
     * @return the endTime of this OcJobExecInfo
     */
    Optional<LocalDateTime> getEndTime();
    
    /**
     * Returns the elapsed of this OcJobExecInfo. The elapsed field corresponds
     * to the database column ordercat.ordercat.oc_job_exec_info.elapsed.
     * 
     * @return the elapsed of this OcJobExecInfo
     */
    Optional<String> getElapsed();
    
    /**
     * Returns the status of this OcJobExecInfo. The status field corresponds to
     * the database column ordercat.ordercat.oc_job_exec_info.status.
     * 
     * @return the status of this OcJobExecInfo
     */
    String getStatus();
    
    /**
     * Sets the id of this OcJobExecInfo. The id field corresponds to the
     * database column ordercat.ordercat.oc_job_exec_info.id.
     * 
     * @param id to set of this OcJobExecInfo
     * @return   this OcJobExecInfo instance
     */
    OcJobExecInfo setId(long id);
    
    /**
     * Sets the jobName of this OcJobExecInfo. The jobName field corresponds to
     * the database column ordercat.ordercat.oc_job_exec_info.job_name.
     * 
     * @param jobName to set of this OcJobExecInfo
     * @return        this OcJobExecInfo instance
     */
    OcJobExecInfo setJobName(String jobName);
    
    /**
     * Sets the beginTime of this OcJobExecInfo. The beginTime field corresponds
     * to the database column ordercat.ordercat.oc_job_exec_info.begin_time.
     * 
     * @param beginTime to set of this OcJobExecInfo
     * @return          this OcJobExecInfo instance
     */
    OcJobExecInfo setBeginTime(LocalDateTime beginTime);
    
    /**
     * Sets the endTime of this OcJobExecInfo. The endTime field corresponds to
     * the database column ordercat.ordercat.oc_job_exec_info.end_time.
     * 
     * @param endTime to set of this OcJobExecInfo
     * @return        this OcJobExecInfo instance
     */
    OcJobExecInfo setEndTime(LocalDateTime endTime);
    
    /**
     * Sets the elapsed of this OcJobExecInfo. The elapsed field corresponds to
     * the database column ordercat.ordercat.oc_job_exec_info.elapsed.
     * 
     * @param elapsed to set of this OcJobExecInfo
     * @return        this OcJobExecInfo instance
     */
    OcJobExecInfo setElapsed(String elapsed);
    
    /**
     * Sets the status of this OcJobExecInfo. The status field corresponds to
     * the database column ordercat.ordercat.oc_job_exec_info.status.
     * 
     * @param status to set of this OcJobExecInfo
     * @return       this OcJobExecInfo instance
     */
    OcJobExecInfo setStatus(String status);
    
    enum Identifier implements ColumnIdentifier<OcJobExecInfo> {
        
        ID         ("id"),
        JOB_NAME   ("job_name"),
        BEGIN_TIME ("begin_time"),
        END_TIME   ("end_time"),
        ELAPSED    ("elapsed"),
        STATUS     ("status");
        
        private final String columnName;
        private final TableIdentifier<OcJobExecInfo> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "ordercat";
        }
        
        @Override
        public String getSchemaName() {
            return "ordercat";
        }
        
        @Override
        public String getTableName() {
            return "oc_job_exec_info";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<OcJobExecInfo> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}