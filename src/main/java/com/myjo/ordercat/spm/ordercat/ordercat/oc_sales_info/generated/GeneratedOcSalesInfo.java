package com.myjo.ordercat.spm.ordercat.ordercat.oc_sales_info.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_sales_info.OcSalesInfo;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.time.TimestampToLocalDateTimeMapper;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Optional;
import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_sales_info.OcSalesInfo}-interface
 * representing entities of the {@code oc_sales_info}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedOcSalesInfo {
    
    /**
     * This Field corresponds to the {@link OcSalesInfo} field that can be
     * obtained using the {@link OcSalesInfo#getId()} method.
     */
    LongField<OcSalesInfo, Long> ID = LongField.create(
        Identifier.ID,
        OcSalesInfo::getId,
        OcSalesInfo::setId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link OcSalesInfo} field that can be
     * obtained using the {@link OcSalesInfo#getNumIid()} method.
     */
    StringField<OcSalesInfo, String> NUM_IID = StringField.create(
        Identifier.NUM_IID,
        o -> OptionalUtil.unwrap(o.getNumIid()),
        OcSalesInfo::setNumIid,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcSalesInfo} field that can be
     * obtained using the {@link OcSalesInfo#getSalesCount()} method.
     */
    ComparableField<OcSalesInfo, Integer, Integer> SALES_COUNT = ComparableField.create(
        Identifier.SALES_COUNT,
        o -> OptionalUtil.unwrap(o.getSalesCount()),
        OcSalesInfo::setSalesCount,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcSalesInfo} field that can be
     * obtained using the {@link OcSalesInfo#getExecJobId()} method.
     */
    ComparableField<OcSalesInfo, Integer, Integer> EXEC_JOB_ID = ComparableField.create(
        Identifier.EXEC_JOB_ID,
        o -> OptionalUtil.unwrap(o.getExecJobId()),
        OcSalesInfo::setExecJobId,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcSalesInfo} field that can be
     * obtained using the {@link OcSalesInfo#getAddTime()} method.
     */
    ComparableField<OcSalesInfo, Timestamp, LocalDateTime> ADD_TIME = ComparableField.create(
        Identifier.ADD_TIME,
        OcSalesInfo::getAddTime,
        OcSalesInfo::setAddTime,
        new TimestampToLocalDateTimeMapper(), 
        false
    );
    
    /**
     * Returns the id of this OcSalesInfo. The id field corresponds to the
     * database column ordercat.ordercat.oc_sales_info.id.
     * 
     * @return the id of this OcSalesInfo
     */
    long getId();
    
    /**
     * Returns the numIid of this OcSalesInfo. The numIid field corresponds to
     * the database column ordercat.ordercat.oc_sales_info.numIid.
     * 
     * @return the numIid of this OcSalesInfo
     */
    Optional<String> getNumIid();
    
    /**
     * Returns the salesCount of this OcSalesInfo. The salesCount field
     * corresponds to the database column
     * ordercat.ordercat.oc_sales_info.sales_count.
     * 
     * @return the salesCount of this OcSalesInfo
     */
    OptionalInt getSalesCount();
    
    /**
     * Returns the execJobId of this OcSalesInfo. The execJobId field
     * corresponds to the database column
     * ordercat.ordercat.oc_sales_info.exec_job_id.
     * 
     * @return the execJobId of this OcSalesInfo
     */
    OptionalInt getExecJobId();
    
    /**
     * Returns the addTime of this OcSalesInfo. The addTime field corresponds to
     * the database column ordercat.ordercat.oc_sales_info.add_time.
     * 
     * @return the addTime of this OcSalesInfo
     */
    LocalDateTime getAddTime();
    
    /**
     * Sets the id of this OcSalesInfo. The id field corresponds to the database
     * column ordercat.ordercat.oc_sales_info.id.
     * 
     * @param id to set of this OcSalesInfo
     * @return   this OcSalesInfo instance
     */
    OcSalesInfo setId(long id);
    
    /**
     * Sets the numIid of this OcSalesInfo. The numIid field corresponds to the
     * database column ordercat.ordercat.oc_sales_info.numIid.
     * 
     * @param numIid to set of this OcSalesInfo
     * @return       this OcSalesInfo instance
     */
    OcSalesInfo setNumIid(String numIid);
    
    /**
     * Sets the salesCount of this OcSalesInfo. The salesCount field corresponds
     * to the database column ordercat.ordercat.oc_sales_info.sales_count.
     * 
     * @param salesCount to set of this OcSalesInfo
     * @return           this OcSalesInfo instance
     */
    OcSalesInfo setSalesCount(Integer salesCount);
    
    /**
     * Sets the execJobId of this OcSalesInfo. The execJobId field corresponds
     * to the database column ordercat.ordercat.oc_sales_info.exec_job_id.
     * 
     * @param execJobId to set of this OcSalesInfo
     * @return          this OcSalesInfo instance
     */
    OcSalesInfo setExecJobId(Integer execJobId);
    
    /**
     * Sets the addTime of this OcSalesInfo. The addTime field corresponds to
     * the database column ordercat.ordercat.oc_sales_info.add_time.
     * 
     * @param addTime to set of this OcSalesInfo
     * @return        this OcSalesInfo instance
     */
    OcSalesInfo setAddTime(LocalDateTime addTime);
    
    enum Identifier implements ColumnIdentifier<OcSalesInfo> {
        
        ID          ("id"),
        NUM_IID     ("numIid"),
        SALES_COUNT ("sales_count"),
        EXEC_JOB_ID ("exec_job_id"),
        ADD_TIME    ("add_time");
        
        private final String columnName;
        private final TableIdentifier<OcSalesInfo> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "ordercat";
        }
        
        @Override
        public String getSchemaName() {
            return "ordercat";
        }
        
        @Override
        public String getTableName() {
            return "oc_sales_info";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<OcSalesInfo> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}