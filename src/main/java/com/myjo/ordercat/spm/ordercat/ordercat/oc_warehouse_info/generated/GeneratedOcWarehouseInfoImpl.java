package com.myjo.ordercat.spm.ordercat.ordercat.oc_warehouse_info.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_warehouse_info.OcWarehouseInfo;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import java.time.LocalDateTime;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_warehouse_info.OcWarehouseInfo}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOcWarehouseInfoImpl implements OcWarehouseInfo {
    
    private long id;
    private Integer warehouseId;
    private String warehouseName;
    private Integer pickRate;
    private Integer thedTime;
    private Integer execJobId;
    private Integer pickDate;
    private LocalDateTime udpateWarehouseTime;
    private String mark;
    private String retrunDesc;
    private Integer returnRate;
    private String expressName;
    private String endT;
    private LocalDateTime addTime;
    
    protected GeneratedOcWarehouseInfoImpl() {
        
    }
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public OptionalInt getWarehouseId() {
        return OptionalUtil.ofNullable(warehouseId);
    }
    
    @Override
    public String getWarehouseName() {
        return warehouseName;
    }
    
    @Override
    public OptionalInt getPickRate() {
        return OptionalUtil.ofNullable(pickRate);
    }
    
    @Override
    public OptionalInt getThedTime() {
        return OptionalUtil.ofNullable(thedTime);
    }
    
    @Override
    public OptionalInt getExecJobId() {
        return OptionalUtil.ofNullable(execJobId);
    }
    
    @Override
    public OptionalInt getPickDate() {
        return OptionalUtil.ofNullable(pickDate);
    }
    
    @Override
    public Optional<LocalDateTime> getUdpateWarehouseTime() {
        return Optional.ofNullable(udpateWarehouseTime);
    }
    
    @Override
    public Optional<String> getMark() {
        return Optional.ofNullable(mark);
    }
    
    @Override
    public Optional<String> getRetrunDesc() {
        return Optional.ofNullable(retrunDesc);
    }
    
    @Override
    public OptionalInt getReturnRate() {
        return OptionalUtil.ofNullable(returnRate);
    }
    
    @Override
    public Optional<String> getExpressName() {
        return Optional.ofNullable(expressName);
    }
    
    @Override
    public Optional<String> getEndT() {
        return Optional.ofNullable(endT);
    }
    
    @Override
    public LocalDateTime getAddTime() {
        return addTime;
    }
    
    @Override
    public OcWarehouseInfo setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setWarehouseId(Integer warehouseId) {
        this.warehouseId = warehouseId;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setWarehouseName(String warehouseName) {
        this.warehouseName = warehouseName;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setPickRate(Integer pickRate) {
        this.pickRate = pickRate;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setThedTime(Integer thedTime) {
        this.thedTime = thedTime;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setExecJobId(Integer execJobId) {
        this.execJobId = execJobId;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setPickDate(Integer pickDate) {
        this.pickDate = pickDate;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setUdpateWarehouseTime(LocalDateTime udpateWarehouseTime) {
        this.udpateWarehouseTime = udpateWarehouseTime;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setMark(String mark) {
        this.mark = mark;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setRetrunDesc(String retrunDesc) {
        this.retrunDesc = retrunDesc;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setReturnRate(Integer returnRate) {
        this.returnRate = returnRate;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setExpressName(String expressName) {
        this.expressName = expressName;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setEndT(String endT) {
        this.endT = endT;
        return this;
    }
    
    @Override
    public OcWarehouseInfo setAddTime(LocalDateTime addTime) {
        this.addTime = addTime;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "                  + Objects.toString(getId()));
        sj.add("warehouseId = "         + Objects.toString(OptionalUtil.unwrap(getWarehouseId())));
        sj.add("warehouseName = "       + Objects.toString(getWarehouseName()));
        sj.add("pickRate = "            + Objects.toString(OptionalUtil.unwrap(getPickRate())));
        sj.add("thedTime = "            + Objects.toString(OptionalUtil.unwrap(getThedTime())));
        sj.add("execJobId = "           + Objects.toString(OptionalUtil.unwrap(getExecJobId())));
        sj.add("pickDate = "            + Objects.toString(OptionalUtil.unwrap(getPickDate())));
        sj.add("udpateWarehouseTime = " + Objects.toString(OptionalUtil.unwrap(getUdpateWarehouseTime())));
        sj.add("mark = "                + Objects.toString(OptionalUtil.unwrap(getMark())));
        sj.add("retrunDesc = "          + Objects.toString(OptionalUtil.unwrap(getRetrunDesc())));
        sj.add("returnRate = "          + Objects.toString(OptionalUtil.unwrap(getReturnRate())));
        sj.add("expressName = "         + Objects.toString(OptionalUtil.unwrap(getExpressName())));
        sj.add("endT = "                + Objects.toString(OptionalUtil.unwrap(getEndT())));
        sj.add("addTime = "             + Objects.toString(getAddTime()));
        return "OcWarehouseInfoImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof OcWarehouseInfo)) { return false; }
        final OcWarehouseInfo thatOcWarehouseInfo = (OcWarehouseInfo)that;
        if (this.getId() != thatOcWarehouseInfo.getId()) {return false; }
        if (!Objects.equals(this.getWarehouseId(), thatOcWarehouseInfo.getWarehouseId())) {return false; }
        if (!Objects.equals(this.getWarehouseName(), thatOcWarehouseInfo.getWarehouseName())) {return false; }
        if (!Objects.equals(this.getPickRate(), thatOcWarehouseInfo.getPickRate())) {return false; }
        if (!Objects.equals(this.getThedTime(), thatOcWarehouseInfo.getThedTime())) {return false; }
        if (!Objects.equals(this.getExecJobId(), thatOcWarehouseInfo.getExecJobId())) {return false; }
        if (!Objects.equals(this.getPickDate(), thatOcWarehouseInfo.getPickDate())) {return false; }
        if (!Objects.equals(this.getUdpateWarehouseTime(), thatOcWarehouseInfo.getUdpateWarehouseTime())) {return false; }
        if (!Objects.equals(this.getMark(), thatOcWarehouseInfo.getMark())) {return false; }
        if (!Objects.equals(this.getRetrunDesc(), thatOcWarehouseInfo.getRetrunDesc())) {return false; }
        if (!Objects.equals(this.getReturnRate(), thatOcWarehouseInfo.getReturnRate())) {return false; }
        if (!Objects.equals(this.getExpressName(), thatOcWarehouseInfo.getExpressName())) {return false; }
        if (!Objects.equals(this.getEndT(), thatOcWarehouseInfo.getEndT())) {return false; }
        if (!Objects.equals(this.getAddTime(), thatOcWarehouseInfo.getAddTime())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getWarehouseId());
        hash = 31 * hash + Objects.hashCode(getWarehouseName());
        hash = 31 * hash + Objects.hashCode(getPickRate());
        hash = 31 * hash + Objects.hashCode(getThedTime());
        hash = 31 * hash + Objects.hashCode(getExecJobId());
        hash = 31 * hash + Objects.hashCode(getPickDate());
        hash = 31 * hash + Objects.hashCode(getUdpateWarehouseTime());
        hash = 31 * hash + Objects.hashCode(getMark());
        hash = 31 * hash + Objects.hashCode(getRetrunDesc());
        hash = 31 * hash + Objects.hashCode(getReturnRate());
        hash = 31 * hash + Objects.hashCode(getExpressName());
        hash = 31 * hash + Objects.hashCode(getEndT());
        hash = 31 * hash + Objects.hashCode(getAddTime());
        return hash;
    }
}