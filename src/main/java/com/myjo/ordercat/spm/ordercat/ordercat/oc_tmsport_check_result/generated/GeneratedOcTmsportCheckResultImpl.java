package com.myjo.ordercat.spm.ordercat.ordercat.oc_tmsport_check_result.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_tmsport_check_result.OcTmsportCheckResult;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalLong;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_tmsport_check_result.OcTmsportCheckResult}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOcTmsportCheckResultImpl implements OcTmsportCheckResult {
    
    private long id;
    private String tmOuterOrderId;
    private Long tmOrderNum;
    private Long tmNum;
    private Long tbOrderNum;
    private Long tbNum;
    private LocalDateTime tbCreated;
    private LocalDateTime tbPaytime;
    private BigDecimal tbPrice;
    private BigDecimal tbPayment;
    private BigDecimal tbDiscountFee;
    private BigDecimal tbTotalFee;
    private String dzStatus;
    private String dzDetailsMessage;
    private String remarks;
    private LocalDateTime addTime;
    
    protected GeneratedOcTmsportCheckResultImpl() {
        
    }
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public Optional<String> getTmOuterOrderId() {
        return Optional.ofNullable(tmOuterOrderId);
    }
    
    @Override
    public OptionalLong getTmOrderNum() {
        return OptionalUtil.ofNullable(tmOrderNum);
    }
    
    @Override
    public OptionalLong getTmNum() {
        return OptionalUtil.ofNullable(tmNum);
    }
    
    @Override
    public OptionalLong getTbOrderNum() {
        return OptionalUtil.ofNullable(tbOrderNum);
    }
    
    @Override
    public OptionalLong getTbNum() {
        return OptionalUtil.ofNullable(tbNum);
    }
    
    @Override
    public Optional<LocalDateTime> getTbCreated() {
        return Optional.ofNullable(tbCreated);
    }
    
    @Override
    public Optional<LocalDateTime> getTbPaytime() {
        return Optional.ofNullable(tbPaytime);
    }
    
    @Override
    public Optional<BigDecimal> getTbPrice() {
        return Optional.ofNullable(tbPrice);
    }
    
    @Override
    public Optional<BigDecimal> getTbPayment() {
        return Optional.ofNullable(tbPayment);
    }
    
    @Override
    public Optional<BigDecimal> getTbDiscountFee() {
        return Optional.ofNullable(tbDiscountFee);
    }
    
    @Override
    public Optional<BigDecimal> getTbTotalFee() {
        return Optional.ofNullable(tbTotalFee);
    }
    
    @Override
    public Optional<String> getDzStatus() {
        return Optional.ofNullable(dzStatus);
    }
    
    @Override
    public Optional<String> getDzDetailsMessage() {
        return Optional.ofNullable(dzDetailsMessage);
    }
    
    @Override
    public Optional<String> getRemarks() {
        return Optional.ofNullable(remarks);
    }
    
    @Override
    public LocalDateTime getAddTime() {
        return addTime;
    }
    
    @Override
    public OcTmsportCheckResult setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTmOuterOrderId(String tmOuterOrderId) {
        this.tmOuterOrderId = tmOuterOrderId;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTmOrderNum(Long tmOrderNum) {
        this.tmOrderNum = tmOrderNum;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTmNum(Long tmNum) {
        this.tmNum = tmNum;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbOrderNum(Long tbOrderNum) {
        this.tbOrderNum = tbOrderNum;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbNum(Long tbNum) {
        this.tbNum = tbNum;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbCreated(LocalDateTime tbCreated) {
        this.tbCreated = tbCreated;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbPaytime(LocalDateTime tbPaytime) {
        this.tbPaytime = tbPaytime;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbPrice(BigDecimal tbPrice) {
        this.tbPrice = tbPrice;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbPayment(BigDecimal tbPayment) {
        this.tbPayment = tbPayment;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbDiscountFee(BigDecimal tbDiscountFee) {
        this.tbDiscountFee = tbDiscountFee;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setTbTotalFee(BigDecimal tbTotalFee) {
        this.tbTotalFee = tbTotalFee;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setDzStatus(String dzStatus) {
        this.dzStatus = dzStatus;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setDzDetailsMessage(String dzDetailsMessage) {
        this.dzDetailsMessage = dzDetailsMessage;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setRemarks(String remarks) {
        this.remarks = remarks;
        return this;
    }
    
    @Override
    public OcTmsportCheckResult setAddTime(LocalDateTime addTime) {
        this.addTime = addTime;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "               + Objects.toString(getId()));
        sj.add("tmOuterOrderId = "   + Objects.toString(OptionalUtil.unwrap(getTmOuterOrderId())));
        sj.add("tmOrderNum = "       + Objects.toString(OptionalUtil.unwrap(getTmOrderNum())));
        sj.add("tmNum = "            + Objects.toString(OptionalUtil.unwrap(getTmNum())));
        sj.add("tbOrderNum = "       + Objects.toString(OptionalUtil.unwrap(getTbOrderNum())));
        sj.add("tbNum = "            + Objects.toString(OptionalUtil.unwrap(getTbNum())));
        sj.add("tbCreated = "        + Objects.toString(OptionalUtil.unwrap(getTbCreated())));
        sj.add("tbPaytime = "        + Objects.toString(OptionalUtil.unwrap(getTbPaytime())));
        sj.add("tbPrice = "          + Objects.toString(OptionalUtil.unwrap(getTbPrice())));
        sj.add("tbPayment = "        + Objects.toString(OptionalUtil.unwrap(getTbPayment())));
        sj.add("tbDiscountFee = "    + Objects.toString(OptionalUtil.unwrap(getTbDiscountFee())));
        sj.add("tbTotalFee = "       + Objects.toString(OptionalUtil.unwrap(getTbTotalFee())));
        sj.add("dzStatus = "         + Objects.toString(OptionalUtil.unwrap(getDzStatus())));
        sj.add("dzDetailsMessage = " + Objects.toString(OptionalUtil.unwrap(getDzDetailsMessage())));
        sj.add("remarks = "          + Objects.toString(OptionalUtil.unwrap(getRemarks())));
        sj.add("addTime = "          + Objects.toString(getAddTime()));
        return "OcTmsportCheckResultImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof OcTmsportCheckResult)) { return false; }
        final OcTmsportCheckResult thatOcTmsportCheckResult = (OcTmsportCheckResult)that;
        if (this.getId() != thatOcTmsportCheckResult.getId()) {return false; }
        if (!Objects.equals(this.getTmOuterOrderId(), thatOcTmsportCheckResult.getTmOuterOrderId())) {return false; }
        if (!Objects.equals(this.getTmOrderNum(), thatOcTmsportCheckResult.getTmOrderNum())) {return false; }
        if (!Objects.equals(this.getTmNum(), thatOcTmsportCheckResult.getTmNum())) {return false; }
        if (!Objects.equals(this.getTbOrderNum(), thatOcTmsportCheckResult.getTbOrderNum())) {return false; }
        if (!Objects.equals(this.getTbNum(), thatOcTmsportCheckResult.getTbNum())) {return false; }
        if (!Objects.equals(this.getTbCreated(), thatOcTmsportCheckResult.getTbCreated())) {return false; }
        if (!Objects.equals(this.getTbPaytime(), thatOcTmsportCheckResult.getTbPaytime())) {return false; }
        if (!Objects.equals(this.getTbPrice(), thatOcTmsportCheckResult.getTbPrice())) {return false; }
        if (!Objects.equals(this.getTbPayment(), thatOcTmsportCheckResult.getTbPayment())) {return false; }
        if (!Objects.equals(this.getTbDiscountFee(), thatOcTmsportCheckResult.getTbDiscountFee())) {return false; }
        if (!Objects.equals(this.getTbTotalFee(), thatOcTmsportCheckResult.getTbTotalFee())) {return false; }
        if (!Objects.equals(this.getDzStatus(), thatOcTmsportCheckResult.getDzStatus())) {return false; }
        if (!Objects.equals(this.getDzDetailsMessage(), thatOcTmsportCheckResult.getDzDetailsMessage())) {return false; }
        if (!Objects.equals(this.getRemarks(), thatOcTmsportCheckResult.getRemarks())) {return false; }
        if (!Objects.equals(this.getAddTime(), thatOcTmsportCheckResult.getAddTime())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getTmOuterOrderId());
        hash = 31 * hash + Objects.hashCode(getTmOrderNum());
        hash = 31 * hash + Objects.hashCode(getTmNum());
        hash = 31 * hash + Objects.hashCode(getTbOrderNum());
        hash = 31 * hash + Objects.hashCode(getTbNum());
        hash = 31 * hash + Objects.hashCode(getTbCreated());
        hash = 31 * hash + Objects.hashCode(getTbPaytime());
        hash = 31 * hash + Objects.hashCode(getTbPrice());
        hash = 31 * hash + Objects.hashCode(getTbPayment());
        hash = 31 * hash + Objects.hashCode(getTbDiscountFee());
        hash = 31 * hash + Objects.hashCode(getTbTotalFee());
        hash = 31 * hash + Objects.hashCode(getDzStatus());
        hash = 31 * hash + Objects.hashCode(getDzDetailsMessage());
        hash = 31 * hash + Objects.hashCode(getRemarks());
        hash = 31 * hash + Objects.hashCode(getAddTime());
        return hash;
    }
}