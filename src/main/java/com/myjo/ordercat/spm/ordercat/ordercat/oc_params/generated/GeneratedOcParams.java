package com.myjo.ordercat.spm.ordercat.ordercat.oc_params.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_params.OcParams;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.time.TimestampToLocalDateTimeMapper;
import java.sql.Timestamp;
import java.time.LocalDateTime;

/**
 * The generated base for the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_params.OcParams}-interface
 * representing entities of the {@code oc_params}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedOcParams {
    
    /**
     * This Field corresponds to the {@link OcParams} field that can be obtained
     * using the {@link OcParams#getId()} method.
     */
    LongField<OcParams, Long> ID = LongField.create(
        Identifier.ID,
        OcParams::getId,
        OcParams::setId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link OcParams} field that can be obtained
     * using the {@link OcParams#getPkey()} method.
     */
    StringField<OcParams, String> PKEY = StringField.create(
        Identifier.PKEY,
        OcParams::getPkey,
        OcParams::setPkey,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link OcParams} field that can be obtained
     * using the {@link OcParams#getPvalue()} method.
     */
    StringField<OcParams, String> PVALUE = StringField.create(
        Identifier.PVALUE,
        OcParams::getPvalue,
        OcParams::setPvalue,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcParams} field that can be obtained
     * using the {@link OcParams#getAddTime()} method.
     */
    ComparableField<OcParams, Timestamp, LocalDateTime> ADD_TIME = ComparableField.create(
        Identifier.ADD_TIME,
        OcParams::getAddTime,
        OcParams::setAddTime,
        new TimestampToLocalDateTimeMapper(), 
        false
    );
    
    /**
     * Returns the id of this OcParams. The id field corresponds to the database
     * column ordercat.ordercat.oc_params.id.
     * 
     * @return the id of this OcParams
     */
    long getId();
    
    /**
     * Returns the pkey of this OcParams. The pkey field corresponds to the
     * database column ordercat.ordercat.oc_params.pkey.
     * 
     * @return the pkey of this OcParams
     */
    String getPkey();
    
    /**
     * Returns the pvalue of this OcParams. The pvalue field corresponds to the
     * database column ordercat.ordercat.oc_params.pvalue.
     * 
     * @return the pvalue of this OcParams
     */
    String getPvalue();
    
    /**
     * Returns the addTime of this OcParams. The addTime field corresponds to
     * the database column ordercat.ordercat.oc_params.add_time.
     * 
     * @return the addTime of this OcParams
     */
    LocalDateTime getAddTime();
    
    /**
     * Sets the id of this OcParams. The id field corresponds to the database
     * column ordercat.ordercat.oc_params.id.
     * 
     * @param id to set of this OcParams
     * @return   this OcParams instance
     */
    OcParams setId(long id);
    
    /**
     * Sets the pkey of this OcParams. The pkey field corresponds to the
     * database column ordercat.ordercat.oc_params.pkey.
     * 
     * @param pkey to set of this OcParams
     * @return     this OcParams instance
     */
    OcParams setPkey(String pkey);
    
    /**
     * Sets the pvalue of this OcParams. The pvalue field corresponds to the
     * database column ordercat.ordercat.oc_params.pvalue.
     * 
     * @param pvalue to set of this OcParams
     * @return       this OcParams instance
     */
    OcParams setPvalue(String pvalue);
    
    /**
     * Sets the addTime of this OcParams. The addTime field corresponds to the
     * database column ordercat.ordercat.oc_params.add_time.
     * 
     * @param addTime to set of this OcParams
     * @return        this OcParams instance
     */
    OcParams setAddTime(LocalDateTime addTime);
    
    enum Identifier implements ColumnIdentifier<OcParams> {
        
        ID       ("id"),
        PKEY     ("pkey"),
        PVALUE   ("pvalue"),
        ADD_TIME ("add_time");
        
        private final String columnName;
        private final TableIdentifier<OcParams> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "ordercat";
        }
        
        @Override
        public String getSchemaName() {
            return "ordercat";
        }
        
        @Override
        public String getTableName() {
            return "oc_params";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<OcParams> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}