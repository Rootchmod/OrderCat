package com.myjo.ordercat.spm.ordercat.ordercat.oc_refund_operate_record.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_refund_operate_record.OcRefundOperateRecord;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import java.time.LocalDateTime;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalLong;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_refund_operate_record.OcRefundOperateRecord}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOcRefundOperateRecordImpl implements OcRefundOperateRecord {
    
    private long id;
    private Long refundId;
    private Long tid;
    private Short isDaixiao;
    private String status;
    private String reason;
    private String sid;
    private String companyName;
    private String refundPhase;
    private Long refundVersion;
    private String refundAmount;
    private String operateType;
    private String operateDetail;
    private String operateResult;
    private Short isLatest;
    private LocalDateTime addTime;
    
    protected GeneratedOcRefundOperateRecordImpl() {
        
    }
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public OptionalLong getRefundId() {
        return OptionalUtil.ofNullable(refundId);
    }
    
    @Override
    public OptionalLong getTid() {
        return OptionalUtil.ofNullable(tid);
    }
    
    @Override
    public Optional<Short> getIsDaixiao() {
        return Optional.ofNullable(isDaixiao);
    }
    
    @Override
    public Optional<String> getStatus() {
        return Optional.ofNullable(status);
    }
    
    @Override
    public Optional<String> getReason() {
        return Optional.ofNullable(reason);
    }
    
    @Override
    public Optional<String> getSid() {
        return Optional.ofNullable(sid);
    }
    
    @Override
    public Optional<String> getCompanyName() {
        return Optional.ofNullable(companyName);
    }
    
    @Override
    public Optional<String> getRefundPhase() {
        return Optional.ofNullable(refundPhase);
    }
    
    @Override
    public OptionalLong getRefundVersion() {
        return OptionalUtil.ofNullable(refundVersion);
    }
    
    @Override
    public Optional<String> getRefundAmount() {
        return Optional.ofNullable(refundAmount);
    }
    
    @Override
    public Optional<String> getOperateType() {
        return Optional.ofNullable(operateType);
    }
    
    @Override
    public Optional<String> getOperateDetail() {
        return Optional.ofNullable(operateDetail);
    }
    
    @Override
    public Optional<String> getOperateResult() {
        return Optional.ofNullable(operateResult);
    }
    
    @Override
    public Optional<Short> getIsLatest() {
        return Optional.ofNullable(isLatest);
    }
    
    @Override
    public LocalDateTime getAddTime() {
        return addTime;
    }
    
    @Override
    public OcRefundOperateRecord setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setRefundId(Long refundId) {
        this.refundId = refundId;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setTid(Long tid) {
        this.tid = tid;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setIsDaixiao(Short isDaixiao) {
        this.isDaixiao = isDaixiao;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setStatus(String status) {
        this.status = status;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setRefundPhase(String refundPhase) {
        this.refundPhase = refundPhase;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setRefundVersion(Long refundVersion) {
        this.refundVersion = refundVersion;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setRefundAmount(String refundAmount) {
        this.refundAmount = refundAmount;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setOperateType(String operateType) {
        this.operateType = operateType;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setOperateDetail(String operateDetail) {
        this.operateDetail = operateDetail;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setOperateResult(String operateResult) {
        this.operateResult = operateResult;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setIsLatest(Short isLatest) {
        this.isLatest = isLatest;
        return this;
    }
    
    @Override
    public OcRefundOperateRecord setAddTime(LocalDateTime addTime) {
        this.addTime = addTime;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "            + Objects.toString(getId()));
        sj.add("refundId = "      + Objects.toString(OptionalUtil.unwrap(getRefundId())));
        sj.add("tid = "           + Objects.toString(OptionalUtil.unwrap(getTid())));
        sj.add("isDaixiao = "     + Objects.toString(OptionalUtil.unwrap(getIsDaixiao())));
        sj.add("status = "        + Objects.toString(OptionalUtil.unwrap(getStatus())));
        sj.add("reason = "        + Objects.toString(OptionalUtil.unwrap(getReason())));
        sj.add("sid = "           + Objects.toString(OptionalUtil.unwrap(getSid())));
        sj.add("companyName = "   + Objects.toString(OptionalUtil.unwrap(getCompanyName())));
        sj.add("refundPhase = "   + Objects.toString(OptionalUtil.unwrap(getRefundPhase())));
        sj.add("refundVersion = " + Objects.toString(OptionalUtil.unwrap(getRefundVersion())));
        sj.add("refundAmount = "  + Objects.toString(OptionalUtil.unwrap(getRefundAmount())));
        sj.add("operateType = "   + Objects.toString(OptionalUtil.unwrap(getOperateType())));
        sj.add("operateDetail = " + Objects.toString(OptionalUtil.unwrap(getOperateDetail())));
        sj.add("operateResult = " + Objects.toString(OptionalUtil.unwrap(getOperateResult())));
        sj.add("isLatest = "      + Objects.toString(OptionalUtil.unwrap(getIsLatest())));
        sj.add("addTime = "       + Objects.toString(getAddTime()));
        return "OcRefundOperateRecordImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof OcRefundOperateRecord)) { return false; }
        final OcRefundOperateRecord thatOcRefundOperateRecord = (OcRefundOperateRecord)that;
        if (this.getId() != thatOcRefundOperateRecord.getId()) {return false; }
        if (!Objects.equals(this.getRefundId(), thatOcRefundOperateRecord.getRefundId())) {return false; }
        if (!Objects.equals(this.getTid(), thatOcRefundOperateRecord.getTid())) {return false; }
        if (!Objects.equals(this.getIsDaixiao(), thatOcRefundOperateRecord.getIsDaixiao())) {return false; }
        if (!Objects.equals(this.getStatus(), thatOcRefundOperateRecord.getStatus())) {return false; }
        if (!Objects.equals(this.getReason(), thatOcRefundOperateRecord.getReason())) {return false; }
        if (!Objects.equals(this.getSid(), thatOcRefundOperateRecord.getSid())) {return false; }
        if (!Objects.equals(this.getCompanyName(), thatOcRefundOperateRecord.getCompanyName())) {return false; }
        if (!Objects.equals(this.getRefundPhase(), thatOcRefundOperateRecord.getRefundPhase())) {return false; }
        if (!Objects.equals(this.getRefundVersion(), thatOcRefundOperateRecord.getRefundVersion())) {return false; }
        if (!Objects.equals(this.getRefundAmount(), thatOcRefundOperateRecord.getRefundAmount())) {return false; }
        if (!Objects.equals(this.getOperateType(), thatOcRefundOperateRecord.getOperateType())) {return false; }
        if (!Objects.equals(this.getOperateDetail(), thatOcRefundOperateRecord.getOperateDetail())) {return false; }
        if (!Objects.equals(this.getOperateResult(), thatOcRefundOperateRecord.getOperateResult())) {return false; }
        if (!Objects.equals(this.getIsLatest(), thatOcRefundOperateRecord.getIsLatest())) {return false; }
        if (!Objects.equals(this.getAddTime(), thatOcRefundOperateRecord.getAddTime())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getRefundId());
        hash = 31 * hash + Objects.hashCode(getTid());
        hash = 31 * hash + Objects.hashCode(getIsDaixiao());
        hash = 31 * hash + Objects.hashCode(getStatus());
        hash = 31 * hash + Objects.hashCode(getReason());
        hash = 31 * hash + Objects.hashCode(getSid());
        hash = 31 * hash + Objects.hashCode(getCompanyName());
        hash = 31 * hash + Objects.hashCode(getRefundPhase());
        hash = 31 * hash + Objects.hashCode(getRefundVersion());
        hash = 31 * hash + Objects.hashCode(getRefundAmount());
        hash = 31 * hash + Objects.hashCode(getOperateType());
        hash = 31 * hash + Objects.hashCode(getOperateDetail());
        hash = 31 * hash + Objects.hashCode(getOperateResult());
        hash = 31 * hash + Objects.hashCode(getIsLatest());
        hash = 31 * hash + Objects.hashCode(getAddTime());
        return hash;
    }
}