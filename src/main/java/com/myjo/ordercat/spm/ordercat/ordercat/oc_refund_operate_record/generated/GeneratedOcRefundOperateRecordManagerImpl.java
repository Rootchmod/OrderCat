package com.myjo.ordercat.spm.ordercat.ordercat.oc_refund_operate_record.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_refund_operate_record.OcRefundOperateRecord;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_refund_operate_record.OcRefundOperateRecord}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOcRefundOperateRecordManagerImpl 
extends AbstractManager<OcRefundOperateRecord> 
implements GeneratedOcRefundOperateRecordManager {
    
    private final TableIdentifier<OcRefundOperateRecord> tableIdentifier;
    
    protected GeneratedOcRefundOperateRecordManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("ordercat", "ordercat", "oc_refund_operate_record");
    }
    
    @Override
    public TableIdentifier<OcRefundOperateRecord> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<OcRefundOperateRecord>> fields() {
        return Stream.of(
            OcRefundOperateRecord.ID,
            OcRefundOperateRecord.REFUND_ID,
            OcRefundOperateRecord.TID,
            OcRefundOperateRecord.IS_DAIXIAO,
            OcRefundOperateRecord.STATUS,
            OcRefundOperateRecord.REASON,
            OcRefundOperateRecord.SID,
            OcRefundOperateRecord.COMPANY_NAME,
            OcRefundOperateRecord.OPERATE_DETAIL,
            OcRefundOperateRecord.ADD_TIME
        );
    }
    
    @Override
    public Stream<Field<OcRefundOperateRecord>> primaryKeyFields() {
        return Stream.of(
            OcRefundOperateRecord.ID
        );
    }
}