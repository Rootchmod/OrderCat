package com.myjo.ordercat.spm.ordercat.ordercat.oc_as_refund_check_result.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_as_refund_check_result.OcAsRefundCheckResult;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.OptionalLong;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_as_refund_check_result.OcAsRefundCheckResult}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOcAsRefundCheckResultImpl implements OcAsRefundCheckResult {
    
    private long id;
    private Long refundId;
    private Long tid;
    private Short isDaixiao;
    private String buyerNick;
    private Long ordersCount;
    private Integer num;
    private String refundStatus;
    private BigDecimal refundFee;
    private BigDecimal totalFee;
    private String refundPhase;
    private String dzStatus;
    private String failureReason;
    private String remarks;
    private String labourStatus;
    private LocalDateTime addTime;
    
    protected GeneratedOcAsRefundCheckResultImpl() {
        
    }
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public OptionalLong getRefundId() {
        return OptionalUtil.ofNullable(refundId);
    }
    
    @Override
    public OptionalLong getTid() {
        return OptionalUtil.ofNullable(tid);
    }
    
    @Override
    public Optional<Short> getIsDaixiao() {
        return Optional.ofNullable(isDaixiao);
    }
    
    @Override
    public Optional<String> getBuyerNick() {
        return Optional.ofNullable(buyerNick);
    }
    
    @Override
    public OptionalLong getOrdersCount() {
        return OptionalUtil.ofNullable(ordersCount);
    }
    
    @Override
    public OptionalInt getNum() {
        return OptionalUtil.ofNullable(num);
    }
    
    @Override
    public Optional<String> getRefundStatus() {
        return Optional.ofNullable(refundStatus);
    }
    
    @Override
    public Optional<BigDecimal> getRefundFee() {
        return Optional.ofNullable(refundFee);
    }
    
    @Override
    public Optional<BigDecimal> getTotalFee() {
        return Optional.ofNullable(totalFee);
    }
    
    @Override
    public Optional<String> getRefundPhase() {
        return Optional.ofNullable(refundPhase);
    }
    
    @Override
    public Optional<String> getDzStatus() {
        return Optional.ofNullable(dzStatus);
    }
    
    @Override
    public Optional<String> getFailureReason() {
        return Optional.ofNullable(failureReason);
    }
    
    @Override
    public Optional<String> getRemarks() {
        return Optional.ofNullable(remarks);
    }
    
    @Override
    public Optional<String> getLabourStatus() {
        return Optional.ofNullable(labourStatus);
    }
    
    @Override
    public LocalDateTime getAddTime() {
        return addTime;
    }
    
    @Override
    public OcAsRefundCheckResult setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setRefundId(Long refundId) {
        this.refundId = refundId;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setTid(Long tid) {
        this.tid = tid;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setIsDaixiao(Short isDaixiao) {
        this.isDaixiao = isDaixiao;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setBuyerNick(String buyerNick) {
        this.buyerNick = buyerNick;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setOrdersCount(Long ordersCount) {
        this.ordersCount = ordersCount;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setNum(Integer num) {
        this.num = num;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setRefundStatus(String refundStatus) {
        this.refundStatus = refundStatus;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setRefundFee(BigDecimal refundFee) {
        this.refundFee = refundFee;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setTotalFee(BigDecimal totalFee) {
        this.totalFee = totalFee;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setRefundPhase(String refundPhase) {
        this.refundPhase = refundPhase;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setDzStatus(String dzStatus) {
        this.dzStatus = dzStatus;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setRemarks(String remarks) {
        this.remarks = remarks;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setLabourStatus(String labourStatus) {
        this.labourStatus = labourStatus;
        return this;
    }
    
    @Override
    public OcAsRefundCheckResult setAddTime(LocalDateTime addTime) {
        this.addTime = addTime;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "            + Objects.toString(getId()));
        sj.add("refundId = "      + Objects.toString(OptionalUtil.unwrap(getRefundId())));
        sj.add("tid = "           + Objects.toString(OptionalUtil.unwrap(getTid())));
        sj.add("isDaixiao = "     + Objects.toString(OptionalUtil.unwrap(getIsDaixiao())));
        sj.add("buyerNick = "     + Objects.toString(OptionalUtil.unwrap(getBuyerNick())));
        sj.add("ordersCount = "   + Objects.toString(OptionalUtil.unwrap(getOrdersCount())));
        sj.add("num = "           + Objects.toString(OptionalUtil.unwrap(getNum())));
        sj.add("refundStatus = "  + Objects.toString(OptionalUtil.unwrap(getRefundStatus())));
        sj.add("refundFee = "     + Objects.toString(OptionalUtil.unwrap(getRefundFee())));
        sj.add("totalFee = "      + Objects.toString(OptionalUtil.unwrap(getTotalFee())));
        sj.add("refundPhase = "   + Objects.toString(OptionalUtil.unwrap(getRefundPhase())));
        sj.add("dzStatus = "      + Objects.toString(OptionalUtil.unwrap(getDzStatus())));
        sj.add("failureReason = " + Objects.toString(OptionalUtil.unwrap(getFailureReason())));
        sj.add("remarks = "       + Objects.toString(OptionalUtil.unwrap(getRemarks())));
        sj.add("labourStatus = "  + Objects.toString(OptionalUtil.unwrap(getLabourStatus())));
        sj.add("addTime = "       + Objects.toString(getAddTime()));
        return "OcAsRefundCheckResultImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof OcAsRefundCheckResult)) { return false; }
        final OcAsRefundCheckResult thatOcAsRefundCheckResult = (OcAsRefundCheckResult)that;
        if (this.getId() != thatOcAsRefundCheckResult.getId()) {return false; }
        if (!Objects.equals(this.getRefundId(), thatOcAsRefundCheckResult.getRefundId())) {return false; }
        if (!Objects.equals(this.getTid(), thatOcAsRefundCheckResult.getTid())) {return false; }
        if (!Objects.equals(this.getIsDaixiao(), thatOcAsRefundCheckResult.getIsDaixiao())) {return false; }
        if (!Objects.equals(this.getBuyerNick(), thatOcAsRefundCheckResult.getBuyerNick())) {return false; }
        if (!Objects.equals(this.getOrdersCount(), thatOcAsRefundCheckResult.getOrdersCount())) {return false; }
        if (!Objects.equals(this.getNum(), thatOcAsRefundCheckResult.getNum())) {return false; }
        if (!Objects.equals(this.getRefundStatus(), thatOcAsRefundCheckResult.getRefundStatus())) {return false; }
        if (!Objects.equals(this.getRefundFee(), thatOcAsRefundCheckResult.getRefundFee())) {return false; }
        if (!Objects.equals(this.getTotalFee(), thatOcAsRefundCheckResult.getTotalFee())) {return false; }
        if (!Objects.equals(this.getRefundPhase(), thatOcAsRefundCheckResult.getRefundPhase())) {return false; }
        if (!Objects.equals(this.getDzStatus(), thatOcAsRefundCheckResult.getDzStatus())) {return false; }
        if (!Objects.equals(this.getFailureReason(), thatOcAsRefundCheckResult.getFailureReason())) {return false; }
        if (!Objects.equals(this.getRemarks(), thatOcAsRefundCheckResult.getRemarks())) {return false; }
        if (!Objects.equals(this.getLabourStatus(), thatOcAsRefundCheckResult.getLabourStatus())) {return false; }
        if (!Objects.equals(this.getAddTime(), thatOcAsRefundCheckResult.getAddTime())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getRefundId());
        hash = 31 * hash + Objects.hashCode(getTid());
        hash = 31 * hash + Objects.hashCode(getIsDaixiao());
        hash = 31 * hash + Objects.hashCode(getBuyerNick());
        hash = 31 * hash + Objects.hashCode(getOrdersCount());
        hash = 31 * hash + Objects.hashCode(getNum());
        hash = 31 * hash + Objects.hashCode(getRefundStatus());
        hash = 31 * hash + Objects.hashCode(getRefundFee());
        hash = 31 * hash + Objects.hashCode(getTotalFee());
        hash = 31 * hash + Objects.hashCode(getRefundPhase());
        hash = 31 * hash + Objects.hashCode(getDzStatus());
        hash = 31 * hash + Objects.hashCode(getFailureReason());
        hash = 31 * hash + Objects.hashCode(getRemarks());
        hash = 31 * hash + Objects.hashCode(getLabourStatus());
        hash = 31 * hash + Objects.hashCode(getAddTime());
        return hash;
    }
}