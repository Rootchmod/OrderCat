package com.myjo.ordercat.spm.ordercat.ordercat.oc_tm_order_records.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_tm_order_records.OcTmOrderRecords;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.time.TimestampToLocalDateTimeMapper;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Optional;

/**
 * The generated base for the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_tm_order_records.OcTmOrderRecords}-interface
 * representing entities of the {@code oc_tm_order_records}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedOcTmOrderRecords {
    
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getId()} method.
     */
    final LongField<OcTmOrderRecords, Long> ID = LongField.create(
        Identifier.ID,
        OcTmOrderRecords::getId,
        OcTmOrderRecords::setId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getTid()} method.
     */
    final StringField<OcTmOrderRecords, String> TID = StringField.create(
        Identifier.TID,
        o -> OptionalUtil.unwrap(o.getTid()),
        OcTmOrderRecords::setTid,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getType()} method.
     */
    final StringField<OcTmOrderRecords, String> TYPE = StringField.create(
        Identifier.TYPE,
        o -> OptionalUtil.unwrap(o.getType()),
        OcTmOrderRecords::setType,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getStatus()} method.
     */
    final StringField<OcTmOrderRecords, String> STATUS = StringField.create(
        Identifier.STATUS,
        o -> OptionalUtil.unwrap(o.getStatus()),
        OcTmOrderRecords::setStatus,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getOrderInfo()} method.
     */
    final StringField<OcTmOrderRecords, String> ORDER_INFO = StringField.create(
        Identifier.ORDER_INFO,
        o -> OptionalUtil.unwrap(o.getOrderInfo()),
        OcTmOrderRecords::setOrderInfo,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getFailCause()} method.
     */
    final StringField<OcTmOrderRecords, String> FAIL_CAUSE = StringField.create(
        Identifier.FAIL_CAUSE,
        o -> OptionalUtil.unwrap(o.getFailCause()),
        OcTmOrderRecords::setFailCause,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getWhSnapshotData()} method.
     */
    final StringField<OcTmOrderRecords, String> WH_SNAPSHOT_DATA = StringField.create(
        Identifier.WH_SNAPSHOT_DATA,
        o -> OptionalUtil.unwrap(o.getWhSnapshotData()),
        OcTmOrderRecords::setWhSnapshotData,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getMachineCid()} method.
     */
    final StringField<OcTmOrderRecords, String> MACHINE_CID = StringField.create(
        Identifier.MACHINE_CID,
        o -> OptionalUtil.unwrap(o.getMachineCid()),
        OcTmOrderRecords::setMachineCid,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcTmOrderRecords} field that can be
     * obtained using the {@link OcTmOrderRecords#getAddTime()} method.
     */
    final ComparableField<OcTmOrderRecords, Timestamp, LocalDateTime> ADD_TIME = ComparableField.create(
        Identifier.ADD_TIME,
        OcTmOrderRecords::getAddTime,
        OcTmOrderRecords::setAddTime,
        new TimestampToLocalDateTimeMapper(), 
        false
    );
    
    /**
     * Returns the id of this OcTmOrderRecords. The id field corresponds to the
     * database column ordercat.ordercat.oc_tm_order_records.id.
     * 
     * @return the id of this OcTmOrderRecords
     */
    long getId();
    
    /**
     * Returns the tid of this OcTmOrderRecords. The tid field corresponds to
     * the database column ordercat.ordercat.oc_tm_order_records.tid.
     * 
     * @return the tid of this OcTmOrderRecords
     */
    Optional<String> getTid();
    
    /**
     * Returns the type of this OcTmOrderRecords. The type field corresponds to
     * the database column ordercat.ordercat.oc_tm_order_records.type.
     * 
     * @return the type of this OcTmOrderRecords
     */
    Optional<String> getType();
    
    /**
     * Returns the status of this OcTmOrderRecords. The status field corresponds
     * to the database column ordercat.ordercat.oc_tm_order_records.status.
     * 
     * @return the status of this OcTmOrderRecords
     */
    Optional<String> getStatus();
    
    /**
     * Returns the orderInfo of this OcTmOrderRecords. The orderInfo field
     * corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.order_info.
     * 
     * @return the orderInfo of this OcTmOrderRecords
     */
    Optional<String> getOrderInfo();
    
    /**
     * Returns the failCause of this OcTmOrderRecords. The failCause field
     * corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.fail_cause.
     * 
     * @return the failCause of this OcTmOrderRecords
     */
    Optional<String> getFailCause();
    
    /**
     * Returns the whSnapshotData of this OcTmOrderRecords. The whSnapshotData
     * field corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.wh_snapshot_data.
     * 
     * @return the whSnapshotData of this OcTmOrderRecords
     */
    Optional<String> getWhSnapshotData();
    
    /**
     * Returns the machineCid of this OcTmOrderRecords. The machineCid field
     * corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.machine_cid.
     * 
     * @return the machineCid of this OcTmOrderRecords
     */
    Optional<String> getMachineCid();
    
    /**
     * Returns the addTime of this OcTmOrderRecords. The addTime field
     * corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.add_time.
     * 
     * @return the addTime of this OcTmOrderRecords
     */
    LocalDateTime getAddTime();
    
    /**
     * Sets the id of this OcTmOrderRecords. The id field corresponds to the
     * database column ordercat.ordercat.oc_tm_order_records.id.
     * 
     * @param id to set of this OcTmOrderRecords
     * @return   this OcTmOrderRecords instance
     */
    OcTmOrderRecords setId(long id);
    
    /**
     * Sets the tid of this OcTmOrderRecords. The tid field corresponds to the
     * database column ordercat.ordercat.oc_tm_order_records.tid.
     * 
     * @param tid to set of this OcTmOrderRecords
     * @return    this OcTmOrderRecords instance
     */
    OcTmOrderRecords setTid(String tid);
    
    /**
     * Sets the type of this OcTmOrderRecords. The type field corresponds to the
     * database column ordercat.ordercat.oc_tm_order_records.type.
     * 
     * @param type to set of this OcTmOrderRecords
     * @return     this OcTmOrderRecords instance
     */
    OcTmOrderRecords setType(String type);
    
    /**
     * Sets the status of this OcTmOrderRecords. The status field corresponds to
     * the database column ordercat.ordercat.oc_tm_order_records.status.
     * 
     * @param status to set of this OcTmOrderRecords
     * @return       this OcTmOrderRecords instance
     */
    OcTmOrderRecords setStatus(String status);
    
    /**
     * Sets the orderInfo of this OcTmOrderRecords. The orderInfo field
     * corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.order_info.
     * 
     * @param orderInfo to set of this OcTmOrderRecords
     * @return          this OcTmOrderRecords instance
     */
    OcTmOrderRecords setOrderInfo(String orderInfo);
    
    /**
     * Sets the failCause of this OcTmOrderRecords. The failCause field
     * corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.fail_cause.
     * 
     * @param failCause to set of this OcTmOrderRecords
     * @return          this OcTmOrderRecords instance
     */
    OcTmOrderRecords setFailCause(String failCause);
    
    /**
     * Sets the whSnapshotData of this OcTmOrderRecords. The whSnapshotData
     * field corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.wh_snapshot_data.
     * 
     * @param whSnapshotData to set of this OcTmOrderRecords
     * @return               this OcTmOrderRecords instance
     */
    OcTmOrderRecords setWhSnapshotData(String whSnapshotData);
    
    /**
     * Sets the machineCid of this OcTmOrderRecords. The machineCid field
     * corresponds to the database column
     * ordercat.ordercat.oc_tm_order_records.machine_cid.
     * 
     * @param machineCid to set of this OcTmOrderRecords
     * @return           this OcTmOrderRecords instance
     */
    OcTmOrderRecords setMachineCid(String machineCid);
    
    /**
     * Sets the addTime of this OcTmOrderRecords. The addTime field corresponds
     * to the database column ordercat.ordercat.oc_tm_order_records.add_time.
     * 
     * @param addTime to set of this OcTmOrderRecords
     * @return        this OcTmOrderRecords instance
     */
    OcTmOrderRecords setAddTime(LocalDateTime addTime);
    
    enum Identifier implements ColumnIdentifier<OcTmOrderRecords> {
        
        ID               ("id"),
        TID              ("tid"),
        TYPE             ("type"),
        STATUS           ("status"),
        ORDER_INFO       ("order_info"),
        FAIL_CAUSE       ("fail_cause"),
        WH_SNAPSHOT_DATA ("wh_snapshot_data"),
        MACHINE_CID      ("machine_cid"),
        ADD_TIME         ("add_time");
        
        private final String columnName;
        private final TableIdentifier<OcTmOrderRecords> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "ordercat";
        }
        
        @Override
        public String getSchemaName() {
            return "ordercat";
        }
        
        @Override
        public String getTableName() {
            return "oc_tm_order_records";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<OcTmOrderRecords> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}