package com.myjo.ordercat.spm.ordercat.ordercat.oc_inventory_info.generated;

import com.myjo.ordercat.spm.ordercat.ordercat.oc_inventory_info.OcInventoryInfo;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.time.TimestampToLocalDateTimeMapper;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Optional;
import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * com.myjo.ordercat.spm.ordercat.ordercat.oc_inventory_info.OcInventoryInfo}-interface
 * representing entities of the {@code oc_inventory_info}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedOcInventoryInfo {
    
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getPurchasePrice()} method.
     */
    final ComparableField<OcInventoryInfo, BigDecimal, BigDecimal> PURCHASE_PRICE = ComparableField.create(
        Identifier.PURCHASE_PRICE,
        o -> OptionalUtil.unwrap(o.getPurchasePrice()),
        OcInventoryInfo::setPurchasePrice,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getId()} method.
     */
    final LongField<OcInventoryInfo, Long> ID = LongField.create(
        Identifier.ID,
        OcInventoryInfo::getId,
        OcInventoryInfo::setId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getGoodsNo()} method.
     */
    final StringField<OcInventoryInfo, String> GOODS_NO = StringField.create(
        Identifier.GOODS_NO,
        o -> OptionalUtil.unwrap(o.getGoodsNo()),
        OcInventoryInfo::setGoodsNo,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getWarehouseId()} method.
     */
    final ComparableField<OcInventoryInfo, Integer, Integer> WAREHOUSE_ID = ComparableField.create(
        Identifier.WAREHOUSE_ID,
        o -> OptionalUtil.unwrap(o.getWarehouseId()),
        OcInventoryInfo::setWarehouseId,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getWarehouseName()} method.
     */
    final StringField<OcInventoryInfo, String> WAREHOUSE_NAME = StringField.create(
        Identifier.WAREHOUSE_NAME,
        o -> OptionalUtil.unwrap(o.getWarehouseName()),
        OcInventoryInfo::setWarehouseName,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getSize1()} method.
     */
    final StringField<OcInventoryInfo, String> SIZE1 = StringField.create(
        Identifier.SIZE1,
        o -> OptionalUtil.unwrap(o.getSize1()),
        OcInventoryInfo::setSize1,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getSize2()} method.
     */
    final StringField<OcInventoryInfo, String> SIZE2 = StringField.create(
        Identifier.SIZE2,
        o -> OptionalUtil.unwrap(o.getSize2()),
        OcInventoryInfo::setSize2,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getBrand()} method.
     */
    final StringField<OcInventoryInfo, String> BRAND = StringField.create(
        Identifier.BRAND,
        o -> OptionalUtil.unwrap(o.getBrand()),
        OcInventoryInfo::setBrand,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getMarketprice()} method.
     */
    final ComparableField<OcInventoryInfo, BigDecimal, BigDecimal> MARKETPRICE = ComparableField.create(
        Identifier.MARKETPRICE,
        o -> OptionalUtil.unwrap(o.getMarketprice()),
        OcInventoryInfo::setMarketprice,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getNum2()} method.
     */
    final ComparableField<OcInventoryInfo, Integer, Integer> NUM2 = ComparableField.create(
        Identifier.NUM2,
        o -> OptionalUtil.unwrap(o.getNum2()),
        OcInventoryInfo::setNum2,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getDivision()} method.
     */
    final StringField<OcInventoryInfo, String> DIVISION = StringField.create(
        Identifier.DIVISION,
        o -> OptionalUtil.unwrap(o.getDivision()),
        OcInventoryInfo::setDivision,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getCate()} method.
     */
    final StringField<OcInventoryInfo, String> CATE = StringField.create(
        Identifier.CATE,
        o -> OptionalUtil.unwrap(o.getCate()),
        OcInventoryInfo::setCate,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getSex()} method.
     */
    final StringField<OcInventoryInfo, String> SEX = StringField.create(
        Identifier.SEX,
        o -> OptionalUtil.unwrap(o.getSex()),
        OcInventoryInfo::setSex,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getQuarter()} method.
     */
    final StringField<OcInventoryInfo, String> QUARTER = StringField.create(
        Identifier.QUARTER,
        o -> OptionalUtil.unwrap(o.getQuarter()),
        OcInventoryInfo::setQuarter,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getDiscount()} method.
     */
    final StringField<OcInventoryInfo, String> DISCOUNT = StringField.create(
        Identifier.DISCOUNT,
        o -> OptionalUtil.unwrap(o.getDiscount()),
        OcInventoryInfo::setDiscount,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getPickRate()} method.
     */
    final ComparableField<OcInventoryInfo, Integer, Integer> PICK_RATE = ComparableField.create(
        Identifier.PICK_RATE,
        o -> OptionalUtil.unwrap(o.getPickRate()),
        OcInventoryInfo::setPickRate,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getWarehouseUpdateTime()}
     * method.
     */
    final ComparableField<OcInventoryInfo, Timestamp, LocalDateTime> WAREHOUSE_UPDATE_TIME = ComparableField.create(
        Identifier.WAREHOUSE_UPDATE_TIME,
        o -> OptionalUtil.unwrap(o.getWarehouseUpdateTime()),
        OcInventoryInfo::setWarehouseUpdateTime,
        new TimestampToLocalDateTimeMapper(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getPickDate()} method.
     */
    final StringField<OcInventoryInfo, String> PICK_DATE = StringField.create(
        Identifier.PICK_DATE,
        o -> OptionalUtil.unwrap(o.getPickDate()),
        OcInventoryInfo::setPickDate,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getThedtime()} method.
     */
    final StringField<OcInventoryInfo, String> THEDTIME = StringField.create(
        Identifier.THEDTIME,
        o -> OptionalUtil.unwrap(o.getThedtime()),
        OcInventoryInfo::setThedtime,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getProxyPrice()} method.
     */
    final ComparableField<OcInventoryInfo, BigDecimal, BigDecimal> PROXY_PRICE = ComparableField.create(
        Identifier.PROXY_PRICE,
        o -> OptionalUtil.unwrap(o.getProxyPrice()),
        OcInventoryInfo::setProxyPrice,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getSalesPrice()} method.
     */
    final ComparableField<OcInventoryInfo, BigDecimal, BigDecimal> SALES_PRICE = ComparableField.create(
        Identifier.SALES_PRICE,
        o -> OptionalUtil.unwrap(o.getSalesPrice()),
        OcInventoryInfo::setSalesPrice,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getSalesCount()} method.
     */
    final ComparableField<OcInventoryInfo, Integer, Integer> SALES_COUNT = ComparableField.create(
        Identifier.SALES_COUNT,
        o -> OptionalUtil.unwrap(o.getSalesCount()),
        OcInventoryInfo::setSalesCount,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getExpressName()} method.
     */
    final StringField<OcInventoryInfo, String> EXPRESS_NAME = StringField.create(
        Identifier.EXPRESS_NAME,
        o -> OptionalUtil.unwrap(o.getExpressName()),
        OcInventoryInfo::setExpressName,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getRetrunDesc()} method.
     */
    final StringField<OcInventoryInfo, String> RETRUN_DESC = StringField.create(
        Identifier.RETRUN_DESC,
        o -> OptionalUtil.unwrap(o.getRetrunDesc()),
        OcInventoryInfo::setRetrunDesc,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getReturnRate()} method.
     */
    final ComparableField<OcInventoryInfo, Integer, Integer> RETURN_RATE = ComparableField.create(
        Identifier.RETURN_RATE,
        o -> OptionalUtil.unwrap(o.getReturnRate()),
        OcInventoryInfo::setReturnRate,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getEndT()} method.
     */
    final StringField<OcInventoryInfo, String> END_T = StringField.create(
        Identifier.END_T,
        o -> OptionalUtil.unwrap(o.getEndT()),
        OcInventoryInfo::setEndT,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getMark()} method.
     */
    final StringField<OcInventoryInfo, String> MARK = StringField.create(
        Identifier.MARK,
        o -> OptionalUtil.unwrap(o.getMark()),
        OcInventoryInfo::setMark,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getNumIid()} method.
     */
    final StringField<OcInventoryInfo, String> NUM_IID = StringField.create(
        Identifier.NUM_IID,
        o -> OptionalUtil.unwrap(o.getNumIid()),
        OcInventoryInfo::setNumIid,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getAddTime()} method.
     */
    final ComparableField<OcInventoryInfo, Timestamp, LocalDateTime> ADD_TIME = ComparableField.create(
        Identifier.ADD_TIME,
        OcInventoryInfo::getAddTime,
        OcInventoryInfo::setAddTime,
        new TimestampToLocalDateTimeMapper(), 
        false
    );
    /**
     * This Field corresponds to the {@link OcInventoryInfo} field that can be
     * obtained using the {@link OcInventoryInfo#getExecJobId()} method.
     */
    final ComparableField<OcInventoryInfo, Integer, Integer> EXEC_JOB_ID = ComparableField.create(
        Identifier.EXEC_JOB_ID,
        o -> OptionalUtil.unwrap(o.getExecJobId()),
        OcInventoryInfo::setExecJobId,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the purchasePrice of this OcInventoryInfo. The purchasePrice
     * field corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.purchasePrice.
     * 
     * @return the purchasePrice of this OcInventoryInfo
     */
    Optional<BigDecimal> getPurchasePrice();
    
    /**
     * Returns the id of this OcInventoryInfo. The id field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.id.
     * 
     * @return the id of this OcInventoryInfo
     */
    long getId();
    
    /**
     * Returns the goodsNo of this OcInventoryInfo. The goodsNo field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.goodsNo.
     * 
     * @return the goodsNo of this OcInventoryInfo
     */
    Optional<String> getGoodsNo();
    
    /**
     * Returns the warehouseId of this OcInventoryInfo. The warehouseId field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.warehouse_id.
     * 
     * @return the warehouseId of this OcInventoryInfo
     */
    OptionalInt getWarehouseId();
    
    /**
     * Returns the warehouseName of this OcInventoryInfo. The warehouseName
     * field corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.warehouse_name.
     * 
     * @return the warehouseName of this OcInventoryInfo
     */
    Optional<String> getWarehouseName();
    
    /**
     * Returns the size1 of this OcInventoryInfo. The size1 field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.size1.
     * 
     * @return the size1 of this OcInventoryInfo
     */
    Optional<String> getSize1();
    
    /**
     * Returns the size2 of this OcInventoryInfo. The size2 field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.size2.
     * 
     * @return the size2 of this OcInventoryInfo
     */
    Optional<String> getSize2();
    
    /**
     * Returns the brand of this OcInventoryInfo. The brand field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.brand.
     * 
     * @return the brand of this OcInventoryInfo
     */
    Optional<String> getBrand();
    
    /**
     * Returns the marketprice of this OcInventoryInfo. The marketprice field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.marketprice.
     * 
     * @return the marketprice of this OcInventoryInfo
     */
    Optional<BigDecimal> getMarketprice();
    
    /**
     * Returns the num2 of this OcInventoryInfo. The num2 field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.num2.
     * 
     * @return the num2 of this OcInventoryInfo
     */
    OptionalInt getNum2();
    
    /**
     * Returns the division of this OcInventoryInfo. The division field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.division.
     * 
     * @return the division of this OcInventoryInfo
     */
    Optional<String> getDivision();
    
    /**
     * Returns the cate of this OcInventoryInfo. The cate field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.cate.
     * 
     * @return the cate of this OcInventoryInfo
     */
    Optional<String> getCate();
    
    /**
     * Returns the sex of this OcInventoryInfo. The sex field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.sex.
     * 
     * @return the sex of this OcInventoryInfo
     */
    Optional<String> getSex();
    
    /**
     * Returns the quarter of this OcInventoryInfo. The quarter field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.quarter.
     * 
     * @return the quarter of this OcInventoryInfo
     */
    Optional<String> getQuarter();
    
    /**
     * Returns the discount of this OcInventoryInfo. The discount field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.discount.
     * 
     * @return the discount of this OcInventoryInfo
     */
    Optional<String> getDiscount();
    
    /**
     * Returns the pickRate of this OcInventoryInfo. The pickRate field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.pickRate.
     * 
     * @return the pickRate of this OcInventoryInfo
     */
    OptionalInt getPickRate();
    
    /**
     * Returns the warehouseUpdateTime of this OcInventoryInfo. The
     * warehouseUpdateTime field corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.warehouse_updateTime.
     * 
     * @return the warehouseUpdateTime of this OcInventoryInfo
     */
    Optional<LocalDateTime> getWarehouseUpdateTime();
    
    /**
     * Returns the pickDate of this OcInventoryInfo. The pickDate field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.pickDate.
     * 
     * @return the pickDate of this OcInventoryInfo
     */
    Optional<String> getPickDate();
    
    /**
     * Returns the thedtime of this OcInventoryInfo. The thedtime field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.thedtime.
     * 
     * @return the thedtime of this OcInventoryInfo
     */
    Optional<String> getThedtime();
    
    /**
     * Returns the proxyPrice of this OcInventoryInfo. The proxyPrice field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.proxyPrice.
     * 
     * @return the proxyPrice of this OcInventoryInfo
     */
    Optional<BigDecimal> getProxyPrice();
    
    /**
     * Returns the salesPrice of this OcInventoryInfo. The salesPrice field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.salesPrice.
     * 
     * @return the salesPrice of this OcInventoryInfo
     */
    Optional<BigDecimal> getSalesPrice();
    
    /**
     * Returns the salesCount of this OcInventoryInfo. The salesCount field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.salesCount.
     * 
     * @return the salesCount of this OcInventoryInfo
     */
    OptionalInt getSalesCount();
    
    /**
     * Returns the expressName of this OcInventoryInfo. The expressName field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.expressName.
     * 
     * @return the expressName of this OcInventoryInfo
     */
    Optional<String> getExpressName();
    
    /**
     * Returns the retrunDesc of this OcInventoryInfo. The retrunDesc field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.retrunDesc.
     * 
     * @return the retrunDesc of this OcInventoryInfo
     */
    Optional<String> getRetrunDesc();
    
    /**
     * Returns the returnRate of this OcInventoryInfo. The returnRate field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.returnRate.
     * 
     * @return the returnRate of this OcInventoryInfo
     */
    OptionalInt getReturnRate();
    
    /**
     * Returns the endT of this OcInventoryInfo. The endT field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.endT.
     * 
     * @return the endT of this OcInventoryInfo
     */
    Optional<String> getEndT();
    
    /**
     * Returns the mark of this OcInventoryInfo. The mark field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.mark.
     * 
     * @return the mark of this OcInventoryInfo
     */
    Optional<String> getMark();
    
    /**
     * Returns the numIid of this OcInventoryInfo. The numIid field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.numIid.
     * 
     * @return the numIid of this OcInventoryInfo
     */
    Optional<String> getNumIid();
    
    /**
     * Returns the addTime of this OcInventoryInfo. The addTime field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.add_time.
     * 
     * @return the addTime of this OcInventoryInfo
     */
    LocalDateTime getAddTime();
    
    /**
     * Returns the execJobId of this OcInventoryInfo. The execJobId field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.exec_job_id.
     * 
     * @return the execJobId of this OcInventoryInfo
     */
    OptionalInt getExecJobId();
    
    /**
     * Sets the purchasePrice of this OcInventoryInfo. The purchasePrice field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.purchasePrice.
     * 
     * @param purchasePrice to set of this OcInventoryInfo
     * @return              this OcInventoryInfo instance
     */
    OcInventoryInfo setPurchasePrice(BigDecimal purchasePrice);
    
    /**
     * Sets the id of this OcInventoryInfo. The id field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.id.
     * 
     * @param id to set of this OcInventoryInfo
     * @return   this OcInventoryInfo instance
     */
    OcInventoryInfo setId(long id);
    
    /**
     * Sets the goodsNo of this OcInventoryInfo. The goodsNo field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.goodsNo.
     * 
     * @param goodsNo to set of this OcInventoryInfo
     * @return        this OcInventoryInfo instance
     */
    OcInventoryInfo setGoodsNo(String goodsNo);
    
    /**
     * Sets the warehouseId of this OcInventoryInfo. The warehouseId field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.warehouse_id.
     * 
     * @param warehouseId to set of this OcInventoryInfo
     * @return            this OcInventoryInfo instance
     */
    OcInventoryInfo setWarehouseId(Integer warehouseId);
    
    /**
     * Sets the warehouseName of this OcInventoryInfo. The warehouseName field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.warehouse_name.
     * 
     * @param warehouseName to set of this OcInventoryInfo
     * @return              this OcInventoryInfo instance
     */
    OcInventoryInfo setWarehouseName(String warehouseName);
    
    /**
     * Sets the size1 of this OcInventoryInfo. The size1 field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.size1.
     * 
     * @param size1 to set of this OcInventoryInfo
     * @return      this OcInventoryInfo instance
     */
    OcInventoryInfo setSize1(String size1);
    
    /**
     * Sets the size2 of this OcInventoryInfo. The size2 field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.size2.
     * 
     * @param size2 to set of this OcInventoryInfo
     * @return      this OcInventoryInfo instance
     */
    OcInventoryInfo setSize2(String size2);
    
    /**
     * Sets the brand of this OcInventoryInfo. The brand field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.brand.
     * 
     * @param brand to set of this OcInventoryInfo
     * @return      this OcInventoryInfo instance
     */
    OcInventoryInfo setBrand(String brand);
    
    /**
     * Sets the marketprice of this OcInventoryInfo. The marketprice field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.marketprice.
     * 
     * @param marketprice to set of this OcInventoryInfo
     * @return            this OcInventoryInfo instance
     */
    OcInventoryInfo setMarketprice(BigDecimal marketprice);
    
    /**
     * Sets the num2 of this OcInventoryInfo. The num2 field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.num2.
     * 
     * @param num2 to set of this OcInventoryInfo
     * @return     this OcInventoryInfo instance
     */
    OcInventoryInfo setNum2(Integer num2);
    
    /**
     * Sets the division of this OcInventoryInfo. The division field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.division.
     * 
     * @param division to set of this OcInventoryInfo
     * @return         this OcInventoryInfo instance
     */
    OcInventoryInfo setDivision(String division);
    
    /**
     * Sets the cate of this OcInventoryInfo. The cate field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.cate.
     * 
     * @param cate to set of this OcInventoryInfo
     * @return     this OcInventoryInfo instance
     */
    OcInventoryInfo setCate(String cate);
    
    /**
     * Sets the sex of this OcInventoryInfo. The sex field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.sex.
     * 
     * @param sex to set of this OcInventoryInfo
     * @return    this OcInventoryInfo instance
     */
    OcInventoryInfo setSex(String sex);
    
    /**
     * Sets the quarter of this OcInventoryInfo. The quarter field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.quarter.
     * 
     * @param quarter to set of this OcInventoryInfo
     * @return        this OcInventoryInfo instance
     */
    OcInventoryInfo setQuarter(String quarter);
    
    /**
     * Sets the discount of this OcInventoryInfo. The discount field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.discount.
     * 
     * @param discount to set of this OcInventoryInfo
     * @return         this OcInventoryInfo instance
     */
    OcInventoryInfo setDiscount(String discount);
    
    /**
     * Sets the pickRate of this OcInventoryInfo. The pickRate field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.pickRate.
     * 
     * @param pickRate to set of this OcInventoryInfo
     * @return         this OcInventoryInfo instance
     */
    OcInventoryInfo setPickRate(Integer pickRate);
    
    /**
     * Sets the warehouseUpdateTime of this OcInventoryInfo. The
     * warehouseUpdateTime field corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.warehouse_updateTime.
     * 
     * @param warehouseUpdateTime to set of this OcInventoryInfo
     * @return                    this OcInventoryInfo instance
     */
    OcInventoryInfo setWarehouseUpdateTime(LocalDateTime warehouseUpdateTime);
    
    /**
     * Sets the pickDate of this OcInventoryInfo. The pickDate field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.pickDate.
     * 
     * @param pickDate to set of this OcInventoryInfo
     * @return         this OcInventoryInfo instance
     */
    OcInventoryInfo setPickDate(String pickDate);
    
    /**
     * Sets the thedtime of this OcInventoryInfo. The thedtime field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.thedtime.
     * 
     * @param thedtime to set of this OcInventoryInfo
     * @return         this OcInventoryInfo instance
     */
    OcInventoryInfo setThedtime(String thedtime);
    
    /**
     * Sets the proxyPrice of this OcInventoryInfo. The proxyPrice field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.proxyPrice.
     * 
     * @param proxyPrice to set of this OcInventoryInfo
     * @return           this OcInventoryInfo instance
     */
    OcInventoryInfo setProxyPrice(BigDecimal proxyPrice);
    
    /**
     * Sets the salesPrice of this OcInventoryInfo. The salesPrice field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.salesPrice.
     * 
     * @param salesPrice to set of this OcInventoryInfo
     * @return           this OcInventoryInfo instance
     */
    OcInventoryInfo setSalesPrice(BigDecimal salesPrice);
    
    /**
     * Sets the salesCount of this OcInventoryInfo. The salesCount field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.salesCount.
     * 
     * @param salesCount to set of this OcInventoryInfo
     * @return           this OcInventoryInfo instance
     */
    OcInventoryInfo setSalesCount(Integer salesCount);
    
    /**
     * Sets the expressName of this OcInventoryInfo. The expressName field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.expressName.
     * 
     * @param expressName to set of this OcInventoryInfo
     * @return            this OcInventoryInfo instance
     */
    OcInventoryInfo setExpressName(String expressName);
    
    /**
     * Sets the retrunDesc of this OcInventoryInfo. The retrunDesc field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.retrunDesc.
     * 
     * @param retrunDesc to set of this OcInventoryInfo
     * @return           this OcInventoryInfo instance
     */
    OcInventoryInfo setRetrunDesc(String retrunDesc);
    
    /**
     * Sets the returnRate of this OcInventoryInfo. The returnRate field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.returnRate.
     * 
     * @param returnRate to set of this OcInventoryInfo
     * @return           this OcInventoryInfo instance
     */
    OcInventoryInfo setReturnRate(Integer returnRate);
    
    /**
     * Sets the endT of this OcInventoryInfo. The endT field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.endT.
     * 
     * @param endT to set of this OcInventoryInfo
     * @return     this OcInventoryInfo instance
     */
    OcInventoryInfo setEndT(String endT);
    
    /**
     * Sets the mark of this OcInventoryInfo. The mark field corresponds to the
     * database column ordercat.ordercat.oc_inventory_info.mark.
     * 
     * @param mark to set of this OcInventoryInfo
     * @return     this OcInventoryInfo instance
     */
    OcInventoryInfo setMark(String mark);
    
    /**
     * Sets the numIid of this OcInventoryInfo. The numIid field corresponds to
     * the database column ordercat.ordercat.oc_inventory_info.numIid.
     * 
     * @param numIid to set of this OcInventoryInfo
     * @return       this OcInventoryInfo instance
     */
    OcInventoryInfo setNumIid(String numIid);
    
    /**
     * Sets the addTime of this OcInventoryInfo. The addTime field corresponds
     * to the database column ordercat.ordercat.oc_inventory_info.add_time.
     * 
     * @param addTime to set of this OcInventoryInfo
     * @return        this OcInventoryInfo instance
     */
    OcInventoryInfo setAddTime(LocalDateTime addTime);
    
    /**
     * Sets the execJobId of this OcInventoryInfo. The execJobId field
     * corresponds to the database column
     * ordercat.ordercat.oc_inventory_info.exec_job_id.
     * 
     * @param execJobId to set of this OcInventoryInfo
     * @return          this OcInventoryInfo instance
     */
    OcInventoryInfo setExecJobId(Integer execJobId);
    
    enum Identifier implements ColumnIdentifier<OcInventoryInfo> {
        
        PURCHASE_PRICE        ("purchasePrice"),
        ID                    ("id"),
        GOODS_NO              ("goodsNo"),
        WAREHOUSE_ID          ("warehouse_id"),
        WAREHOUSE_NAME        ("warehouse_name"),
        SIZE1                 ("size1"),
        SIZE2                 ("size2"),
        BRAND                 ("brand"),
        MARKETPRICE           ("marketprice"),
        NUM2                  ("num2"),
        DIVISION              ("division"),
        CATE                  ("cate"),
        SEX                   ("sex"),
        QUARTER               ("quarter"),
        DISCOUNT              ("discount"),
        PICK_RATE             ("pickRate"),
        WAREHOUSE_UPDATE_TIME ("warehouse_updateTime"),
        PICK_DATE             ("pickDate"),
        THEDTIME              ("thedtime"),
        PROXY_PRICE           ("proxyPrice"),
        SALES_PRICE           ("salesPrice"),
        SALES_COUNT           ("salesCount"),
        EXPRESS_NAME          ("expressName"),
        RETRUN_DESC           ("retrunDesc"),
        RETURN_RATE           ("returnRate"),
        END_T                 ("endT"),
        MARK                  ("mark"),
        NUM_IID               ("numIid"),
        ADD_TIME              ("add_time"),
        EXEC_JOB_ID           ("exec_job_id");
        
        private final String columnName;
        private final TableIdentifier<OcInventoryInfo> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "ordercat";
        }
        
        @Override
        public String getSchemaName() {
            return "ordercat";
        }
        
        @Override
        public String getTableName() {
            return "oc_inventory_info";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<OcInventoryInfo> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}