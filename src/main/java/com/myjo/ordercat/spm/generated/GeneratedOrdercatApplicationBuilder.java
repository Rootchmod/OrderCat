package com.myjo.ordercat.spm.generated;

import com.myjo.ordercat.spm.OrdercatApplication;
import com.myjo.ordercat.spm.OrdercatApplicationBuilder;
import com.myjo.ordercat.spm.OrdercatApplicationImpl;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_inventory_info.OcInventoryInfoManagerImpl;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_inventory_info.OcInventoryInfoSqlAdapter;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_job_exec_info.OcJobExecInfoManagerImpl;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_job_exec_info.OcJobExecInfoSqlAdapter;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_logistics_companies_info.OcLogisticsCompaniesInfoManagerImpl;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_logistics_companies_info.OcLogisticsCompaniesInfoSqlAdapter;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_sales_info.OcSalesInfoManagerImpl;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_sales_info.OcSalesInfoSqlAdapter;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_warehouse_info.OcWarehouseInfoManagerImpl;
import com.myjo.ordercat.spm.ordercat.ordercat.oc_warehouse_info.OcWarehouseInfoSqlAdapter;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.internal.AbstractApplicationBuilder;

/**
 * A generated base {@link
 * com.speedment.runtime.core.internal.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named ordercat.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOrdercatApplicationBuilder extends AbstractApplicationBuilder<OrdercatApplication, OrdercatApplicationBuilder> {
    
    protected GeneratedOrdercatApplicationBuilder() {
        super(OrdercatApplicationImpl.class, GeneratedOrdercatMetadata.class);
        withManager(OcInventoryInfoManagerImpl.class);
        withManager(OcJobExecInfoManagerImpl.class);
        withManager(OcLogisticsCompaniesInfoManagerImpl.class);
        withManager(OcSalesInfoManagerImpl.class);
        withManager(OcWarehouseInfoManagerImpl.class);
        withComponent(OcInventoryInfoSqlAdapter.class);
        withComponent(OcJobExecInfoSqlAdapter.class);
        withComponent(OcLogisticsCompaniesInfoSqlAdapter.class);
        withComponent(OcSalesInfoSqlAdapter.class);
        withComponent(OcWarehouseInfoSqlAdapter.class);
    }
    
    @Override
    public OrdercatApplication build(Injector injector) {
        return injector.getOrThrow(OrdercatApplication.class);
    }
}